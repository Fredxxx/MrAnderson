import java.io.FileReader;
import java.io.FileWriter;
import java.util.List;
import java.util.ArrayList;


// read txt file into single string
String readTXT(rootDirName){
	FileReader fileReader=new FileReader(rootDirName);
	BufferedReader bufferReader= new BufferedReader(fileReader);
	String line=bufferReader.readLine();
	fileReader.close();
	bufferReader.close();
	return line;
	}

// define stuff
//filePath = "c:/Users/Fred/Documents/MrAnderson/uManagerBSH/labViewCom.txt";
//filePathSeq = "c:/Users/Fred/Documents/MrAnderson/uManagerBSH/AcqSettings.txt";
filePath = "c:/neoDiag/MrAnderson/uManagerBSH/labViewCom.txt";
filePathSeq = "c:/neoDiag/MrAnderson/uManagerBSH/AcqSettings.txt";
// reset variables
String dataStr = "empty string";
int flagLV = 0;
int flag = 0;
int cnt = 0;
dataStr = readTXT(filePath);
mm.scripter().message(dataStr);

while(flag == 0) {
	Thread.sleep(100);
	cnt++;
	
	try {
		dataStr = new String(readTXT(filePath));
   	//log.info(str);//<-- this semicolon is VERY important
	}
	catch (Exception ex) {
   	mm.scripter().message("Error in beanshell", ex);
	}
	
	
	flagLV = Integer.parseInt(dataStr.substring(dataStr.indexOf("Start: ") + 7, dataStr.indexOf(";")));
	mm.scripter().message("flagLV: " + flagLV);
	float cntSec = cnt*0.1;
	if(flagLV == 1){
		//mm.scripter().message("detected flag; counter: " + cntSec + "s; flag: " + flagLV);	
		// analyse txt string
		int index = dataStr.indexOf(";");
		list = new ArrayList();
		while (index >= 0) {
			list.add(index);
		   index = dataStr.indexOf(";", index + 1);
			}
		int expTime = Integer.parseInt(dataStr.substring(dataStr.indexOf("ExpTime: ") + 9, list.get(1)));
		int numImg = Integer.parseInt(dataStr.substring(dataStr.indexOf("NumOfImages: ") + 13, list.get(2)));	
		mm.scripter().message("detected flag; counter: " + cntSec + "s; flag: " + flagLV + "; expTime: " + expTime + "; NumOfImages: " + numImg + ";");
		//mmc.setProperty("Camera", "Exposure", expTime);
		mmc.setProperty("Andor sCMOS Camera", "Exposure", expTime);
		// set to external triggering
		seq = mm.acquisitions().loadSequenceSettings(filePathSeq);
		mm.acquisitions().runAcquisitionWithSettings(seq, true);
      FileWriter fileWriter=new FileWriter(filePath);
		fileWriter.write("Start: 0; ExpTime: 100; NumOfImages: 1;");
		fileWriter.close();
		flag = 1;
		} else if(flagLV == 0) {
		mm.scripter().message("waiting for flag; counter: " + cntSec + "s; flag: " + flagLV);
		} else {
		mm.scripter().message("no flagLV detected");	
		}
		// reset micromanager; internal triggering etc.
	}
mm.scripter().message("script ended");